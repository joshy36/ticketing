exports.id=6314,exports.ids=[6314],exports.modules={50836:(e,t,i)=>{Promise.resolve().then(i.bind(i,23279)),Promise.resolve().then(i.bind(i,92465)),Promise.resolve().then(i.t.bind(i,94573,23))},92465:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>UploadImage});var r=i(82395),a=i(78726),s=i.n(a),n=i(32684),o=i(89891),d=i(89669),u=i(42341),l=i(11702),p=i(19328),c=i.n(p),g=i(74555),m=i(86417);let v=["jpeg"];function UploadImage({params:e}){let[t,i]=s().useState(!1),[a,p]=s().useState(""),{register:b,handleSubmit:h}=(0,n.cI)(),{toast:f}=(0,d.pm)(),j=(0,g.useRouter)(),x=m.S.updateEvent.useMutation({onSettled(t,r){t?j.push(`/event/${e.id}`):(f({description:"Error updating event"}),console.error("Error updating event:",r),i(!1))}}),S=m.S.updateArtist.useMutation({onSettled(t,r){t?j.push(`/artist/${e.id}`):(f({description:"Error updating artist"}),console.error("Error updating artist:",r),i(!1))}}),w=m.S.updateVenue.useMutation({onSettled(t,r){t?j.push(`/venue/${e.id}`):(f({description:"Error updating venue"}),console.error("Error updating venue:",r),i(!1))}}),updateImage=async t=>{"events"===e.bucket?x.mutate({id:e.id,image:t}):"artists"===e.bucket?S.mutate({id:e.id,image:t}):"venues"===e.bucket&&w.mutate({id:e.id,image:t})},onSubmit=async t=>{if(i(!0),0==t.file.length){f({variant:"destructive",description:"Must choose a file to upload!"}),i(!1);return}let r=t.file[0].name.split(".")[1];if(!v.includes(r)){f({variant:"destructive",description:"Image must be a jpeg"}),i(!1);return}let a=e.bucket,s=new FormData;s.append("file",t.file[0]),s.append("fileName",t.file[0].name),"events"===a?s.append("location",`/${e.id}/event_photo.jpeg`):"artists"===a?s.append("location",`/${e.id}/profile.jpeg`):"venues"===a&&s.append("location",`/${e.id}/profile.jpeg`),s.append("bucket",a);try{f({description:"Uploading image..."});let e=await fetch("http://localhost:3000/api/image/upload",{method:"POST",body:s,cache:"no-store"});if(e.ok){f({description:"Image uploaded successfully!"});let t=await e.json(),i="http://localhost:54321/storage/v1/object/public/"+a+t.location;await updateImage(i)}else{let t=await e.json();"invalid signature"==t.error.message?f({variant:"destructive",description:"Must be signed in to upload an image!"}):f({variant:"destructive",description:"Error uploading image!"}),console.error("Error uploading image:",t.error)}i(!1)}catch(e){f({variant:"destructive",description:"Error uploading image!"}),console.error("Error uploading image:",e),i(!1)}};return(0,r.jsxs)(r.Fragment,{children:[r.jsx("form",{onSubmit:h(onSubmit),children:(0,r.jsxs)("div",{className:"grid grid-cols-2 grid-rows-1 gap-8",children:[r.jsx(u.I,{id:"picture",type:"file",disabled:t,...b("file",{onChange:e=>{p(URL.createObjectURL(e.target.files[0]))}})}),(0,r.jsxs)(o.z,{type:"submit",disabled:t,className:"max-w-[40%]",children:[t&&r.jsx(l.P.spinner,{className:"mr-2 h-4 w-4 animate-spin"}),"events"===e.bucket?"Create Event":"artists"===e.bucket?"Create Artist":"venues"===e.bucket?"Create Venue":""]})]})}),r.jsx("br",{}),r.jsx("div",{children:""===a?r.jsx("div",{}):r.jsx("div",{children:r.jsx(c(),{src:a,alt:"Image",width:300,height:300,className:"rounded-lg"})})})]})}},47710:(e,t,i)=>{"use strict";i.d(t,{ZP:()=>d});var r=i(46962);let a=(0,r.createProxy)(String.raw`/Users/joshuabender/Documents/GitHub/ticketing/apps/web/components/UploadImage.tsx`),{__esModule:s,$$typeof:n}=a,o=a.default,d=o},13652:(e,t,i)=>{"use strict";i.d(t,{Z:()=>o});var r=i(46962);let a=(0,r.createProxy)(String.raw`/Users/joshuabender/Documents/GitHub/ticketing/apps/web/components/ui/separator.tsx`),{__esModule:s,$$typeof:n}=a;a.default;let o=a.Separator}};